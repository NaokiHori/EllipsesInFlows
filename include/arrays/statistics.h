#if !defined(ARRAYS_STATISTICS_H)
#define ARRAYS_STATISTICS_H
/* This file is automatically generated by define_array.py */

/* ux1 (double, 2D) [1:itot+1] x [0:jsize+1] */
#define UX1_MIN_I (1)
#define UX1_MAX_I (itot+1)
#define UX1_LEN_I (UX1_MAX_I-UX1_MIN_I+1)
#define UX1_MIN_J (0)
#define UX1_MAX_J (jsize+1)
#define UX1_LEN_J (UX1_MAX_J-UX1_MIN_J+1)
#define UX1_MEMSIZE (sizeof(double)*(UX1_LEN_I)*(UX1_LEN_J))
#define UX1(I, J) (ux1[(J)*(itot+1)+((I)-1)])

/* ux2 (double, 2D) [1:itot+1] x [0:jsize+1] */
#define UX2_MIN_I (1)
#define UX2_MAX_I (itot+1)
#define UX2_LEN_I (UX2_MAX_I-UX2_MIN_I+1)
#define UX2_MIN_J (0)
#define UX2_MAX_J (jsize+1)
#define UX2_LEN_J (UX2_MAX_J-UX2_MIN_J+1)
#define UX2_MEMSIZE (sizeof(double)*(UX2_LEN_I)*(UX2_LEN_J))
#define UX2(I, J) (ux2[(J)*(itot+1)+((I)-1)])

/* uy1 (double, 2D) [0:itot+1] x [0:jsize+1] */
#define UY1_MIN_I (0)
#define UY1_MAX_I (itot+1)
#define UY1_LEN_I (UY1_MAX_I-UY1_MIN_I+1)
#define UY1_MIN_J (0)
#define UY1_MAX_J (jsize+1)
#define UY1_LEN_J (UY1_MAX_J-UY1_MIN_J+1)
#define UY1_MEMSIZE (sizeof(double)*(UY1_LEN_I)*(UY1_LEN_J))
#define UY1(I, J) (uy1[(J)*(itot+2)+(I)])

/* uy2 (double, 2D) [0:itot+1] x [0:jsize+1] */
#define UY2_MIN_I (0)
#define UY2_MAX_I (itot+1)
#define UY2_LEN_I (UY2_MAX_I-UY2_MIN_I+1)
#define UY2_MIN_J (0)
#define UY2_MAX_J (jsize+1)
#define UY2_LEN_J (UY2_MAX_J-UY2_MIN_J+1)
#define UY2_MEMSIZE (sizeof(double)*(UY2_LEN_I)*(UY2_LEN_J))
#define UY2(I, J) (uy2[(J)*(itot+2)+(I)])

/* phi (double, 2D) [0:itot+1] x [0:jsize+1] */
#define PHI_MIN_I (0)
#define PHI_MAX_I (itot+1)
#define PHI_LEN_I (PHI_MAX_I-PHI_MIN_I+1)
#define PHI_MIN_J (0)
#define PHI_MAX_J (jsize+1)
#define PHI_LEN_J (PHI_MAX_J-PHI_MIN_J+1)
#define PHI_MEMSIZE (sizeof(double)*(PHI_LEN_I)*(PHI_LEN_J))
#define PHI(I, J) (phi[(J)*(itot+2)+(I)])

#endif // ARRAYS_STATISTICS_H
